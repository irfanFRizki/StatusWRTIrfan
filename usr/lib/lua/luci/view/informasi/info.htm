<%+header%>
<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
<style>
  :root {
    --primary: #3b82f6;
    --success: #10b981;
    --danger: #ef4444;
    --warning: #f59e0b;
    --bg-page: #f8fafc;
    --bg-card: #ffffff;
    --text-dark: #1e293b;
    --text-light: #64748b;
    --border: #e2e8f0;
  }
  
  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }
  
  body {
    background: var(--bg-page);
    color: var(--text-dark);
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  }
  
  .dashboard {
    max-width: 1400px;
    margin: 0 auto;
    padding: 2rem;
  }
  
  .dashboard-header {
    margin-bottom: 2rem;
  }
  
  .dashboard-title {
    font-size: 2rem;
    font-weight: 700;
    color: var(--text-dark);
    margin-bottom: 0.5rem;
  }
  
  .dashboard-subtitle {
    color: var(--text-light);
    font-size: 1rem;
  }
  
  /* Stats Cards */
  .stats-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1.5rem;
    margin-bottom: 2rem;
  }
  
  .stat-card {
    background: var(--bg-card);
    border-radius: 12px;
    padding: 1.5rem;
    box-shadow: 0 1px 3px rgba(0,0,0,0.1);
    transition: transform 0.2s, box-shadow 0.2s;
  }
  
  .stat-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0,0,0,0.15);
  }
  
  .stat-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 1rem;
  }
  
  .stat-label {
    font-size: 0.875rem;
    color: var(--text-light);
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }
  
  .stat-icon {
    width: 40px;
    height: 40px;
    border-radius: 10px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.5rem;
  }
  
  .stat-icon.online { background: #d1fae5; color: var(--success); }
  .stat-icon.offline { background: #fee2e2; color: var(--danger); }
  .stat-icon.allowed { background: #dbeafe; color: var(--primary); }
  .stat-icon.blocked { background: #fef3c7; color: var(--warning); }
  
  .stat-value {
    font-size: 2.5rem;
    font-weight: 700;
    color: var(--text-dark);
    line-height: 1;
  }
  
  /* Device Table */
  .devices-section {
    background: var(--bg-card);
    border-radius: 12px;
    padding: 1.5rem;
    box-shadow: 0 1px 3px rgba(0,0,0,0.1);
  }
  
  .section-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 1.5rem;
    padding-bottom: 1rem;
    border-bottom: 2px solid var(--border);
  }
  
  .section-title {
    font-size: 1.25rem;
    font-weight: 600;
    color: var(--text-dark);
  }
  
  .refresh-btn {
    padding: 0.5rem 1rem;
    background: var(--primary);
    color: white;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    font-size: 0.875rem;
    font-weight: 500;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    transition: background 0.2s;
  }
  
  .refresh-btn:hover {
    background: #2563eb;
  }
  
  .devices-table {
    width: 100%;
    border-collapse: separate;
    border-spacing: 0;
  }
  
  .devices-table thead th {
    background: var(--bg-page);
    padding: 1rem;
    text-align: left;
    font-weight: 600;
    font-size: 0.875rem;
    color: var(--text-light);
    text-transform: uppercase;
    letter-spacing: 0.5px;
    border-bottom: 2px solid var(--border);
  }
  
  .devices-table tbody tr {
    transition: background 0.2s;
  }
  
  .devices-table tbody tr:hover {
    background: var(--bg-page);
  }
  
  .devices-table tbody td {
    padding: 1rem;
    border-bottom: 1px solid var(--border);
    color: var(--text-dark);
  }
  
  .device-name {
    font-weight: 600;
    color: var(--text-dark);
  }
  
  .device-ip {
    font-family: 'Courier New', monospace;
    color: var(--text-light);
    font-size: 0.875rem;
  }
  
  .status-badge {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.375rem 0.75rem;
    border-radius: 6px;
    font-size: 0.875rem;
    font-weight: 500;
  }
  
  .status-badge.online {
    background: #d1fae5;
    color: #065f46;
  }
  
  .status-badge.offline {
    background: #fee2e2;
    color: #991b1b;
  }
  
  .status-dot {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    display: inline-block;
  }
  
  .status-dot.online {
    background: var(--success);
    animation: pulse 2s infinite;
  }
  
  .status-dot.offline {
    background: var(--danger);
  }
  
  @keyframes pulse {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.5; }
  }
  
  .status-icon-cell {
    text-align: center;
  }
  
  .status-icon-cell .material-icons {
    font-size: 1.5rem;
  }
  
  .status-icon-cell .check { color: var(--success); }
  .status-icon-cell .block { color: var(--danger); }
  .status-icon-cell .new { color: var(--warning); }
  
  .empty-state {
    text-align: center;
    padding: 3rem 1rem;
    color: var(--text-light);
  }
  
  .empty-state .material-icons {
    font-size: 4rem;
    opacity: 0.3;
    margin-bottom: 1rem;
  }
  
  @media (max-width: 768px) {
    .dashboard {
      padding: 1rem;
    }
    
    .stats-grid {
      grid-template-columns: 1fr;
    }
    
    .devices-table {
      font-size: 0.875rem;
    }
    
    .devices-table thead th,
    .devices-table tbody td {
      padding: 0.75rem 0.5rem;
    }
  }
</style>

<div class="dashboard">
  <div class="dashboard-header">
    <h1 class="dashboard-title">Dashboard Monitoring Jaringan</h1>
    <p class="dashboard-subtitle">Pantau perangkat yang terhubung ke jaringan WiFi Anda secara real-time</p>
  </div>
  
  <div class="stats-grid" id="stats-grid">
    <div class="stat-card">
      <div class="stat-header">
        <span class="stat-label">Perangkat Online</span>
        <div class="stat-icon online">
          <span class="material-icons">wifi</span>
        </div>
      </div>
      <div class="stat-value" id="online-count">0</div>
    </div>
    
    <div class="stat-card">
      <div class="stat-header">
        <span class="stat-label">Perangkat Offline</span>
        <div class="stat-icon offline">
          <span class="material-icons">wifi_off</span>
        </div>
      </div>
      <div class="stat-value" id="offline-count">0</div>
    </div>
    
    <div class="stat-card">
      <div class="stat-header">
        <span class="stat-label">IP Diizinkan</span>
        <div class="stat-icon allowed">
          <span class="material-icons">check_circle</span>
        </div>
      </div>
      <div class="stat-value" id="allowed-count">0</div>
    </div>
    
    <div class="stat-card">
      <div class="stat-header">
        <span class="stat-label">IP Diblokir</span>
        <div class="stat-icon blocked">
          <span class="material-icons">block</span>
        </div>
      </div>
      <div class="stat-value" id="blocked-count">0</div>
    </div>
  </div>
  
  <div class="devices-section">
    <div class="section-header">
      <h2 class="section-title">Daftar Perangkat</h2>
      <button class="refresh-btn" onclick="updateData()">
        <span class="material-icons">refresh</span>
        Refresh
      </button>
    </div>
    
    <table class="devices-table" id="devices-table">
      <thead>
        <tr>
          <th>Perangkat</th>
          <th>IP Address</th>
          <th>MAC Address</th>
          <th>Status WiFi</th>
          <th style="text-align: center;">Status</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td colspan="5" class="empty-state">
            <span class="material-icons">devices</span>
            <p>Memuat data perangkat...</p>
          </td>
        </tr>
      </tbody>
    </table>
  </div>
</div>

<script>
function updateData() {
  Promise.all([
    fetch('/cgi-bin/online').then(r => r.json()),
    fetch('<%= luci.dispatcher.build_url("admin/services/informasi/allowed_data") %>').then(r => r.json()),
    fetch('<%= luci.dispatcher.build_url("admin/services/informasi/notallowed_data") %>').then(r => r.json()),
    fetch('<%= luci.dispatcher.build_url("admin/services/informasi/telegram_data") %>').then(r => r.json())
  ]).then(([devices, allowed, blocked, newIps]) => {
    // Create lookup dictionaries
    const allowedDict = {};
    allowed.forEach(item => { allowedDict[item.ip] = true; });
    
    const blockedDict = {};
    blocked.forEach(item => { blockedDict[item.ip] = true; });
    
    const newIpsDict = {};
    newIps.forEach(item => { newIpsDict[item.ip] = true; });
    
    // Count statistics
    let onlineCount = 0;
    let offlineCount = 0;
    
    devices.forEach(device => {
      if (device.status === 'TERHUBUNG' || device.status === 'Online') {
        onlineCount++;
      } else {
        offlineCount++;
      }
    });
    
    // Update stats
    document.getElementById('online-count').textContent = onlineCount;
    document.getElementById('offline-count').textContent = offlineCount;
    document.getElementById('allowed-count').textContent = allowed.length;
    document.getElementById('blocked-count').textContent = blocked.length;
    
    // Build table rows
    const tbody = document.querySelector('.devices-table tbody');
    
    if (devices.length === 0) {
      tbody.innerHTML = `
        <tr>
          <td colspan="5" class="empty-state">
            <span class="material-icons">devices</span>
            <p>Tidak ada perangkat yang terdeteksi</p>
          </td>
        </tr>
      `;
      return;
    }
    
    const rows = devices.map(device => {
      const isOnline = device.status === 'TERHUBUNG' || device.status === 'Online';
      const wifiStatus = isOnline ? 
        `<span class="status-badge online"><span class="status-dot online"></span> Online</span>` :
        `<span class="status-badge offline"><span class="status-dot offline"></span> Offline</span>`;
      
      let statusIcon = '<span class="material-icons new" title="IP Baru">fiber_new</span>';
      if (allowedDict[device.ip]) {
        statusIcon = '<span class="material-icons check" title="Diizinkan">check_circle</span>';
      } else if (blockedDict[device.ip]) {
        statusIcon = '<span class="material-icons block" title="Diblokir">block</span>';
      }
      
      return `
        <tr>
          <td>
            <div class="device-name">${device.hostname || 'Unknown Device'}</div>
          </td>
          <td><span class="device-ip">${device.ip}</span></td>
          <td><span class="device-ip">${device.mac || '-'}</span></td>
          <td>${wifiStatus}</td>
          <td class="status-icon-cell">${statusIcon}</td>
        </tr>
      `;
    });
    
    tbody.innerHTML = rows.join('');
  }).catch(err => {
    console.error('Error fetching data:', err);
    document.querySelector('.devices-table tbody').innerHTML = `
      <tr>
        <td colspan="5" class="empty-state">
          <span class="material-icons">error_outline</span>
          <p>Gagal memuat data. Silakan refresh halaman.</p>
        </td>
      </tr>
    `;
  });
}

// Auto-refresh every 5 seconds
updateData();
setInterval(updateData, 5000);
</script>

<%+footer%>